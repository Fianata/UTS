Traceback (most recent call last):
  File "/usr/local/python/3.12.1/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/codespace/.local/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/python/3.12.1/lib/python3.12/asyncio/base_events.py", line 684, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pandas as pd
import numpy as np
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import StandardScaler
from sklearn.compose import ColumnTransformer

# Load data
data = pd.read_csv('cirrhosis.csv')

# A. Imputasi Missing Values
# Pisahkan kolom numerik dan kategorik
num_cols = ['Bilirubin', 'Cholesterol', 'Albumin', 'Copper', 'Alk_Phos',
            'SGOT', 'Tryglicerides', 'Platelets', 'Prothrombin']
cat_cols = ['Sex', 'Drug', 'Ascites', 'Hepatomegaly', 'Spiders', 'Edema']

# Imputasi numerik dengan median
num_imputer = SimpleImputer(strategy='median')
data[num_cols] = num_imputer.fit_transform(data[num_cols])

# Imputasi kategorik dengan modus
cat_imputer = SimpleImputer(strategy='most_frequent')
data[cat_cols] = cat_imputer.fit_transform(data[cat_cols])

# B. Transformasi Log untuk Variabel Skewed
skewed_cols = ['Bilirubin', 'Alk_Phos']
data[skewed_cols] = data[skewed_cols].apply(lambda x: np.log1p(x))

# C. Encoding Variabel Kategorik
data = pd.get_dummies(data, columns=cat_cols, drop_first=True)

# D. Normalisasi Fitur Numerik
scaler = StandardScaler()
data[num_cols] = scaler.fit_transform(data[num_cols])

# Hapus kolom tidak perlu
data.drop(['ID', 'N_Days'], axis=1, inplace=True)
------------------


[31m---------------------------------------------------------------------------[39m
[31mKeyError[39m                                  Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[10][39m[32m, line 36[39m
[32m     33[39m data[num_cols] = scaler.fit_transform(data[num_cols])
[32m     35[39m [38;5;66;03m# Hapus kolom tidak perlu[39;00m
[32m---> [39m[32m36[39m [43mdata[49m[43m.[49m[43mdrop[49m[43m([49m[43m[[49m[33;43m'[39;49m[33;43mID[39;49m[33;43m'[39;49m[43m,[49m[43m [49m[33;43m'[39;49m[33;43mN_Days[39;49m[33;43m'[39;49m[43m][49m[43m,[49m[43m [49m[43maxis[49m[43m=[49m[32;43m1[39;49m[43m,[49m[43m [49m[43minplace[49m[43m=[49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/pandas/core/frame.py:5581[39m, in [36mDataFrame.drop[39m[34m(self, labels, axis, index, columns, level, inplace, errors)[39m
[32m   5433[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mdrop[39m(
[32m   5434[39m     [38;5;28mself[39m,
[32m   5435[39m     labels: IndexLabel | [38;5;28;01mNone[39;00m = [38;5;28;01mNone[39;00m,
[32m   (...)[39m[32m   5442[39m     errors: IgnoreRaise = [33m"[39m[33mraise[39m[33m"[39m,
[32m   5443[39m ) -> DataFrame | [38;5;28;01mNone[39;00m:
[32m   5444[39m [38;5;250m    [39m[33;03m"""[39;00m
[32m   5445[39m [33;03m    Drop specified labels from rows or columns.[39;00m
[32m   5446[39m 
[32m   (...)[39m[32m   5579[39m [33;03m            weight  1.0     0.8[39;00m
[32m   5580[39m [33;03m    """[39;00m
[32m-> [39m[32m5581[39m     [38;5;28;01mreturn[39;00m [38;5;28;43msuper[39;49m[43m([49m[43m)[49m[43m.[49m[43mdrop[49m[43m([49m
[32m   5582[39m [43m        [49m[43mlabels[49m[43m=[49m[43mlabels[49m[43m,[49m
[32m   5583[39m [43m        [49m[43maxis[49m[43m=[49m[43maxis[49m[43m,[49m
[32m   5584[39m [43m        [49m[43mindex[49m[43m=[49m[43mindex[49m[43m,[49m
[32m   5585[39m [43m        [49m[43mcolumns[49m[43m=[49m[43mcolumns[49m[43m,[49m
[32m   5586[39m [43m        [49m[43mlevel[49m[43m=[49m[43mlevel[49m[43m,[49m
[32m   5587[39m [43m        [49m[43minplace[49m[43m=[49m[43minplace[49m[43m,[49m
[32m   5588[39m [43m        [49m[43merrors[49m[43m=[49m[43merrors[49m[43m,[49m
[32m   5589[39m [43m    [49m[43m)[49m

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/pandas/core/generic.py:4788[39m, in [36mNDFrame.drop[39m[34m(self, labels, axis, index, columns, level, inplace, errors)[39m
[32m   4786[39m [38;5;28;01mfor[39;00m axis, labels [38;5;129;01min[39;00m axes.items():
[32m   4787[39m     [38;5;28;01mif[39;00m labels [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[32m-> [39m[32m4788[39m         obj = [43mobj[49m[43m.[49m[43m_drop_axis[49m[43m([49m[43mlabels[49m[43m,[49m[43m [49m[43maxis[49m[43m,[49m[43m [49m[43mlevel[49m[43m=[49m[43mlevel[49m[43m,[49m[43m [49m[43merrors[49m[43m=[49m[43merrors[49m[43m)[49m
[32m   4790[39m [38;5;28;01mif[39;00m inplace:
[32m   4791[39m     [38;5;28mself[39m._update_inplace(obj)

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/pandas/core/generic.py:4830[39m, in [36mNDFrame._drop_axis[39m[34m(self, labels, axis, level, errors, only_slice)[39m
[32m   4828[39m         new_axis = axis.drop(labels, level=level, errors=errors)
[32m   4829[39m     [38;5;28;01melse[39;00m:
[32m-> [39m[32m4830[39m         new_axis = [43maxis[49m[43m.[49m[43mdrop[49m[43m([49m[43mlabels[49m[43m,[49m[43m [49m[43merrors[49m[43m=[49m[43merrors[49m[43m)[49m
[32m   4831[39m     indexer = axis.get_indexer(new_axis)
[32m   4833[39m [38;5;66;03m# Case for non-unique axis[39;00m
[32m   4834[39m [38;5;28;01melse[39;00m:

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/pandas/core/indexes/base.py:7070[39m, in [36mIndex.drop[39m[34m(self, labels, errors)[39m
[32m   7068[39m [38;5;28;01mif[39;00m mask.any():
[32m   7069[39m     [38;5;28;01mif[39;00m errors != [33m"[39m[33mignore[39m[33m"[39m:
[32m-> [39m[32m7070[39m         [38;5;28;01mraise[39;00m [38;5;167;01mKeyError[39;00m([33mf[39m[33m"[39m[38;5;132;01m{[39;00mlabels[mask].tolist()[38;5;132;01m}[39;00m[33m not found in axis[39m[33m"[39m)
[32m   7071[39m     indexer = indexer[~mask]
[32m   7072[39m [38;5;28;01mreturn[39;00m [38;5;28mself[39m.delete(indexer)

[31mKeyError[39m: "['ID'] not found in axis"

